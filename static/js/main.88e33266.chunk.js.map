{"version":3,"sources":["components/login/login.js","components/main/dashboard/dashboard.js","components/main/main.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","backgroundColor","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","Login","props","classes","Grid","container","className","item","sm","style","direction","justify","alignItems","id","noValidate","autoComplete","TextField","label","fullWidth","type","Checkbox","margin","padding","clsx","value","inputProps","textAlign","to","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","toolbar","justifyContent","spacing","mixins","flexGrow","Dashboard","useState","setBtc","tableBookmark","rows","setRows","useEffect","a","fetch","json","data","history","expandTable","generateAverage","newRows","i","date","Date","timestamp","push","createData","toLocaleString","Number","price","toFixed","tradeDate","averagePerDay","forEach","day","getDay","highchartsMore","Highcharts","solidGauge","splineOptions","chart","spacingBottom","spacingTop","title","align","text","y","x","legend","verticalAlign","floating","borderWidth","defaultOptions","xAxis","categories","yAxis","tooltip","shared","valueSuffix","credits","enabled","plotOptions","areaspline","fillOpacity","colors","linearGradient","x1","y1","x2","y2","stops","series","name","lineColor","lineWidth","marker","fillColor","histogram","subtitle","visible","crosshair","min","column","pointPadding","groupPadding","shadow","flexDirection","highcharts","options","color","fontSize","pointFormat","positioner","labelWidth","this","chartWidth","plotHeight","pane","startAngle","endAngle","outerRadius","innerRadius","max","tickPositions","solidgauge","dataLabels","linecap","stickyTracking","rounded","radius","minHeight","TableContainer","component","Paper","Table","table","size","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","key","scope","appBarShift","marginLeft","enteringScreen","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","hideSpan","toolBarTitle","Main","React","open","setOpen","selectedIndex","setSelectedIndex","CssBaseline","AppBar","position","Toolbar","Badge","badgeContent","InputLabel","borderLeft","Avatar","alt","src","Drawer","variant","paper","IconButton","onClick","Divider","List","index","ListItem","button","event","handleListItemClick","selected","ListItemIcon","ListItemText","primary","boxSizing","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88e33266.chunk.js","sourcesContent":["/* eslint-disable semi */\n/* eslint-disable no-tabs */\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { Grid, TextField, Checkbox, makeStyles } from '@material-ui/core';\n\nimport './login.scss'\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  icon: {\n    borderRadius: 3,\n    width: 12,\n    height: 12,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5'\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)'\n    }\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 12,\n      height: 12,\n      backgroundImage:\n          \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n          \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n          \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"'\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3'\n    }\n  }\n});\n\nfunction Login (props) {\n  const classes = useStyles()\n\n  return (\n    <Grid container className=\"container-height\">\n      <Grid container item sm={7} style={{ background: 'indigo' }}></Grid>\n      <Grid container item sm={5} direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <div className=\"align-center\">\n          <h3 className=\"login-title\">AWESOME DASH</h3>\n          <span id=\"sub-title\" style={{ 'text-align': 'center' }}>Welcome back! Please login to your account.</span>\n          <form noValidate autoComplete=\"off\" justify=\"center\" alignItems=\"center\">\n            <div className=\"control-div\">\n              <TextField id=\"standard-basic\" label=\"Username\" fullWidth/>\n            </div>\n            <div className=\"control-div\">\n              <TextField id=\"standard-basic\" label=\"Password\" type=\"password\" fullWidth />\n            </div>\n            <Grid container style={{ 'margin-top': '30px' }}>\n              <Grid item sm={6} style={{ 'text-align': 'left' }}>\n                { /* check width and height */ }\n                <Checkbox\n                  style={{ 'font-size': '0px', margin: '0px', padding: '0px 10px 0 0' }}\n                  checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n                  icon={<span className={classes.icon} />}\n                  value=\"primary\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }} />\n                <span style={{ 'font-size': '10px' }}>Remember Me</span>\n              </Grid>\n              <Grid item sm={6} style={{ textAlign: 'right' }}>\n                <a style={{ 'font-size': '10px' }}>Forgot Password</a>\n              </Grid>\n            </Grid>\n            <Grid container style={{ 'margin-top': '50px' }} justify=\"space-between\">\n              <NavLink to=\"/dashboard\">\n                <button id=\"login-btn\">\n\t\t\t\t\t\t\t\t  Login\n                </button>\n              </NavLink>\n              <button id=\"signup-btn\">\n\t\t\t\t\t\t\t\t\tSign Up\n              </button>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default Login;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable semi */\nimport React, { useEffect, useState } from 'react';\nimport highchartsMore from 'highcharts/highcharts-more.js'\nimport solidGauge from 'highcharts/modules/solid-gauge.js';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer - 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = (props) => {\n  const [btc, setBtc] = useState([]);\n  const [tableBookmark, setTableBookmark] = useState(8);\n  const [rows, setRows] = useState([]);\n\n  /* Get BTC data and update the BTC state with the information as well as call the expandTable\n     function with the data as an argument */\n  useEffect(() => {\n    (async () => {\n      const data = await (await fetch('https://api.coinranking.com/v1/public/coin/1/history/24h')).json();\n      setBtc(data.data.history);\n      expandTable(data.data.history);\n      generateAverage(data.data.history);\n    })();\n  }, []);\n\n  /* Takes array of BTC data and creates rows for table based on the amount of rows (tableBookmark)\n     the users wants to view which gets saved in the rows state */\n  const expandTable = (data) => {\n    const newRows = []\n    for (var i = 0; i < tableBookmark; i++) {\n      var date = new Date(data[i].timestamp);\n      newRows.push(createData(date.toLocaleString(), Number(data[i].price).toFixed(2), 10, 10, 10));\n    };\n    setRows(newRows);\n    // use this to check date generated on line 66 --> console.log(date);\n  };\n\n  // Creating objects to be used to dynamicaly populate our table rows. Initially saved to rows state\n  const createData = (tradeDate, price) => {\n    return { tradeDate, price };\n  };\n\n  // ###################### Only shows Tuesday and Wednesday, consider something else for graphs ###################\n  // Generates price average for each day based on the total amount of days and saves it to the average state\n  const generateAverage = (data) => {\n    // elements 0 - 6 represent the days of the week Sunday - Saturday\n    const averagePerDay = [[], [], [], [], [], [], []];\n\n    data.forEach((data) => {\n      const day = new Date(data.timestamp);\n      averagePerDay[day.getDay()].push(data.price);\n    });\n  };\n\n  // Highchars / highcharts-react specific options and styles\n  const classes = useStyles();\n  highchartsMore(Highcharts);\n  solidGauge(Highcharts);\n  const splineOptions = {\n    chart: {\n      type: 'areaspline',\n      spacingBottom: 60,\n      spacingTop: 40\n    },\n    title: {\n      align: 'left',\n      text: 'Views',\n      y: -5,\n      x: 13\n    },\n    legend: {\n      align: 'left',\n      verticalAlign: 'bottom',\n      x: 0,\n      y: 40,\n      floating: true,\n      borderWidth: 0,\n      backgroundColor:\n              Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n    },\n    xAxis: {\n      width: '100%',\n      categories: [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n      ]\n    },\n    yAxis: {\n      title: {\n        text: ''\n      }\n    },\n    tooltip: {\n      shared: true,\n      valueSuffix: ' units'\n    },\n    credits: {\n      enabled: false\n    },\n    plotOptions: {\n      areaspline: {\n        fillOpacity: 0.5\n      }\n    },\n    //   colors: ['#AEEDFF', '#A3A0FC'],\n    colors: [{\n      linearGradient: { x1: 1, y1: 1, x2: 1, y2: 0 },\n      stops: [\n        [0, 'rgba(255, 255, 255, 0)'],\n        [1, 'rgba(174, 237, 255, .8)']\n      ]\n    }, {\n      linearGradient: { x1: 1, y1: 1, x2: 1, y2: 0 },\n      stops: [\n        [0, 'rgba(255, 255, 255, 0)'],\n        [1, 'rgba(163, 160, 252, .8)']\n      ]\n    }],\n    series: [{\n      name: 'John',\n      data: [12, 6, 3, 8, 4, 10, 12],\n      lineColor: 'rgba(174, 237, 255, 1)',\n      lineWidth: 1,\n      marker: {\n        fillColor: 'white',\n        lineWidth: 1,\n        lineColor: 'rgba(174, 237, 255, 1)'\n      }\n    }, {\n      name: 'Jane',\n      data: [1, 13, 10, 6, 10, 5, 4],\n      lineWidth: 1,\n      lineColor: 'rgba(163, 160, 252, 1)',\n      marker: {\n        fillColor: 'white',\n        lineWidth: 1,\n        lineColor: 'rgba(163, 160, 252, 1)'\n      }\n    }]\n  };\n\n  const solidGauge1 = {\n\n    chart: {\n      type: 'solidgauge',\n      height: '70%'\n    },\n\n    title: {\n      text: ''\n    },\n    tooltip: {\n      borderWidth: 0,\n      backgroundColor: 'none',\n      shadow: false,\n      style: {\n        fontSize: '13px'\n      },\n      valueSuffix: '%',\n      pointFormat: '{series.name}<br><span style=\"font-size:2em; color: {black}; font-weight: bold\">{point.y}</span>',\n      positioner: function (labelWidth) {\n        return {\n          x: ((this.chart.chartWidth - labelWidth) / 2) + 7,\n          y: (this.chart.plotHeight / 2) - 25\n        };\n      }\n    },\n\n    pane: {\n      startAngle: 0,\n      endAngle: 360,\n      background: [{ // Track for Move\n        outerRadius: '105%',\n        innerRadius: '90%',\n        backgroundColor: 'rgba(163, 160, 252, .5)',\n        borderWidth: 0\n      }]\n    },\n\n    yAxis: {\n      min: 0,\n      max: 100,\n      lineWidth: 0,\n      tickPositions: []\n    },\n\n    plotOptions: {\n      solidgauge: {\n        dataLabels: {\n          enabled: false\n        },\n        linecap: 'round',\n        stickyTracking: false,\n        rounded: false\n      }\n    },\n\n    series: [{\n      name: 'Saved',\n      data: [{\n        color: 'rgba(163, 160, 252, 1)',\n        radius: '105%',\n        innerRadius: '90%',\n        y: 50\n      }]\n    }]\n  };\n\n  const histogram = {\n    chart: {\n      type: 'column',\n      height: '80%',\n      width: 130\n    },\n    title: {\n      text: ''\n    },\n    subtitle: {\n      text: ''\n    },\n    xAxis: {\n      categories: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ],\n      visible: false,\n      crosshair: true\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: ''\n      },\n      visible: false\n    },\n    legend: {\n      enabled: false\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0,\n        borderWidth: 0,\n        groupPadding: 0,\n        shadow: false\n      }\n    },\n    series: [{\n      name: 'Data',\n      data: [49.9, 71.5, 106.4, 129.2, 144.0, 120, 135, 80, 92, 50, 111, 130]\n\n    }]\n  };\n\n  return (\n    <>\n      <Grid container spacing={10} direction=\"row\" justify=\"space-between\">\n        <Grid item sm={3}>\n          <div style={ { width: '100%', height: '150px', background: 'white', display: 'flex', justifyContent: 'space-between', alignItems: 'flex-end' } }>\n            <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column', height: '100%', padding: '10px' }}>\n              <span>Total Views</span>\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <span>246k</span>\n                <span>13%</span>\n              </div>\n            </div>\n            <div>\n              <HighchartsReact highcharts = { Highcharts } options = { histogram } />\n            </div>\n          </div>\n        </Grid>\n        <Grid item sm={3}>\n          <div style={ { width: '100%', height: '150px', background: 'white', display: 'flex', justifyContent: 'space-between', alignItems: 'flex-end' } }>\n            <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column', height: '100%', padding: '10px' }}>\n              <span>Total Views</span>\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <span>246k</span>\n                <span>13%</span>\n              </div>\n            </div>\n            <div>\n              <HighchartsReact highcharts = { Highcharts } options = { histogram } />\n            </div>\n          </div>\n        </Grid>\n        <Grid item sm={3}>\n          <div style={ { width: '100%', height: '150px', background: 'white', display: 'flex', justifyContent: 'space-between', alignItems: 'flex-end' } }>\n            <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column', height: '100%', padding: '10px' }}>\n              <span>Total Views</span>\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <span>246k</span>\n                <span>13%</span>\n              </div>\n            </div>\n            <div>\n              <HighchartsReact highcharts = { Highcharts } options = { histogram } />\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container spacing={10} >\n        <Grid item sm={9}>\n          <HighchartsReact highcharts = { Highcharts } options = { splineOptions }/>\n        </Grid>\n        <Grid item sm={3} className=\"solid-gauge-wrapper\">\n          <div className = \"solid-gauge-inner-wrap\">\n\n            <div className = \"solid-gauge-header\">\n              <span>Money</span>\n              <div className=\"budget-box\">\n                <span>Total Budget</span><span style={{ color: 'green' }}>$50,000</span>\n              </div>\n            </div>\n\n            <HighchartsReact highcharts = { Highcharts } options = { solidGauge1 } />\n\n            <div className=\"solid-gauge-info-wrap\">\n              <span className = \"total-spent-info\">Total Spent</span>\n              <span className = \"money-saved-info\">Money Saved</span>\n            </div>\n\n            <div className = \"solid-gauge-footer\">\n              <span>View Full Report</span>\n            </div>\n\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container spacing={10} >\n        <Grid item sm={7} >\n          <div style={{ background: 'white', minHeight: '400px', padding: '15px' }}>\n            <span>Referrer</span>\n            <TableContainer component={Paper} style={{ boxShadow: 'none', margin: '15px 0' }}>\n              <Table className={classes.table} size='small' aria-label=\"simple table\">\n                <TableHead style={{ background: '#F5F6FA' }}>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell align=\"right\">Price</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map((row, i) => (\n                    <TableRow key={i}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.tradeDate}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.price}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <span>Show More</span>\n          </div>\n        </Grid>\n        <Grid item sm={5}>\n          <HighchartsReact highcharts = { Highcharts } options = { splineOptions } />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Dashboard\n","/* eslint-disable semi */\nimport React from 'react';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport BlurCircularIcon from '@material-ui/icons/BlurCircular';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport './main.scss';\nimport { InputLabel } from '@material-ui/core';\nimport Dashboard from './dashboard/dashboard';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer - 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    color: 'white',\n    background: '#43425E',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    color: 'white',\n    background: '#43425E',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(7) + 1\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  hideSpan: {\n    display: 'none'\n  },\n  toolBarTitle: {\n    fontSize: '1rem',\n    margin: '0 10px'\n  }\n}));\n\nfunction Main (props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', background: 'white' }}>\n          <Badge badgeContent={0} color=\"error\" style={{ marginLeft: '15px' }}>\n            <BlurCircularIcon style={{ color: 'grey' }} />\n          </Badge>\n          <Badge badgeContent={0} color=\"error\" style={{ marginLeft: '15px' }}>\n            <ForumIcon style={{ color: 'grey' }} />\n          </Badge>\n          <Badge badgeContent={1} color=\"error\" style={{ marginLeft: '15px' }}>\n            <NotificationsIcon style={{ color: 'grey' }} />\n          </Badge>\n          <InputLabel style={{ borderLeft: 'solid 1px lightgrey', margin: '0 20px', padding: '5px 0 5px 15px', color: 'grey' }}>David Bland</InputLabel>\n          <Avatar alt=\"Remy Sharp\" src=\"https://avatars0.githubusercontent.com/u/20208886?s=400&v=4\" />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open\n          })\n        }}\n      >\n        <div className={classes.toolbar} style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', background: '#3D3B54' }}>\n          <span className={clsx({ [classes.hideSpan]: !open, [classes.toolBarTitle]: true })}> AWESOME DASH </span>\n          <IconButton onClick={handleDrawer} style={{ width: 'auto' }}>\n            <MenuIcon style={{ color: 'white' }} />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Home', 'Dashboard', 'About Me', 'Products', 'Invoices', 'Mail Marketing', 'Chat Room', 'Calendar', 'Help Center', 'Settings'].map((text, index) => (\n            <ListItem button key={text}\n              onClick={event => handleListItemClick(event, index)}\n              selected={selectedIndex === index}>\n              <ListItemIcon style={{ color: '#A5A4BF' }}>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content} style={{ padding: '0 50px 50px 50px', boxSizing: 'border-box' }}>\n        <div className={classes.toolbar} />\n        <Dashboard />\n      </main>\n    </div>\n  );\n}\n\nexport default Main;\n","/* eslint-disable semi */\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './components/login/login'\nimport Main from './components/main/main'\n//import { Router } from '@material-ui/icons';\n\nfunction App () {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path =\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/dashboard\">\n          <Main />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable semi */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './App.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}